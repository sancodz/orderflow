spring.application.name=user-service
# Server Port
server.port=8080

# PostgreSQL Datasource
spring.datasource.url=jdbc:postgresql://localhost:5432/user_db
spring.datasource.username=postgres
spring.datasource.password=@.D9jsk'dFg6z
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Properties
# use 'create-drop' for development if you want fresh schema on each start update in general
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# JWT Properties
# Generate a strong secret key, e.g., using a secure random generator.
# For example, in JShell: Base64.getEncoder().encodeToString(new SecureRandom().generateSeed(32))
# DO NOT use this example key in production. Store it securely (e.g., environment variable).
jwt.secret=oxrM/eX6rPPhtRcCsRMw5o/QlowwDRN2aPLcqU9l9H0=
# 24 hours
jwt.expiration-ms=86400000